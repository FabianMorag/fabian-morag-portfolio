---
import { Image } from "astro:assets";
import { REFERENCES } from "@/contants/references.js";
import LinkedinIcon from "@/components/icon/linkedin.astro";
---

<section id="references" class="py-24">
  <div class="max-w-screen-lg m-auto">
    <h2 class="px-6 mb-12 text-4xl font-bold text-center reveal md:text-5xl">
      Referencias
    </h2>

    <div class="relative">
      <div
        class="flex gap-4 px-6 py-1 overflow-x-scroll references-carrousel hidden-scrollbar snap-mandatory snap-x scroll-smooth md:grid md:grid-cols-2"
      >
        {
          REFERENCES.map(({ name, image, role, rec }, index) => (
            <div
              class:list={[
                "min-w-[90%] snap-center",
                { reveal: index % 2 === 0 },
                { "delayed-reveal": index % 2 === 1 },
              ]}
            >
              <article class="relative h-full px-6 py-8 border shadow md:px-8 border-slate-200 rounded-xl shadow-slate-200">
                <Image
                  src={image}
                  alt={`Imagen de ${name}`}
                  class="object-cover p-1 border-2 rounded-full aspect-square border-amber-400"
                  width={80}
                  height={80}
                />

                <span class="block text-lg font-bold md:text-xl">{name}</span>
                <span class="block mb-4 text-sm text-slate-500">{role}</span>
                <p class="text-sm whitespace-pre-line text-slate-600 md:text-base">
                  {rec}
                </p>
                <div class="absolute text-sky-600/20 right-8 top-4">
                  <LinkedinIcon size={96} />
                </div>
              </article>
            </div>
          ))
        }
      </div>

      <button
        class="absolute z-10 hidden references-carrousel-left-btn left-3 top-1/2 md:hidden"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="icon icon-tabler icons-tabler-filled icon-tabler-circle-arrow-left"
          ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
            d="M12 2a10 10 0 0 1 .324 19.995l-.324 .005l-.324 -.005a10 10 0 0 1 .324 -19.995zm.707 5.293a1 1 0 0 0 -1.414 0l-4 4a1.048 1.048 0 0 0 -.083 .094l-.064 .092l-.052 .098l-.044 .11l-.03 .112l-.017 .126l-.003 .075l.004 .09l.007 .058l.025 .118l.035 .105l.054 .113l.043 .07l.071 .095l.054 .058l4 4l.094 .083a1 1 0 0 0 1.32 -1.497l-2.292 -2.293h5.585l.117 -.007a1 1 0 0 0 -.117 -1.993h-5.586l2.293 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
          ></path></svg
        >
      </button>
      <button
        class="absolute z-10 references-carrousel-right-btn right-3 top-1/2 md:hidden"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="icon icon-tabler icons-tabler-filled icon-tabler-circle-arrow-right"
          ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
            d="M12 2l.324 .005a10 10 0 1 1 -.648 0l.324 -.005zm.613 5.21a1 1 0 0 0 -1.32 1.497l2.291 2.293h-5.584l-.117 .007a1 1 0 0 0 .117 1.993h5.584l-2.291 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l4 -4l.073 -.082l.064 -.089l.062 -.113l.044 -.11l.03 -.112l.017 -.126l.003 -.075l-.007 -.118l-.029 -.148l-.035 -.105l-.054 -.113l-.071 -.111a1.008 1.008 0 0 0 -.097 -.112l-4 -4z"
          ></path></svg
        >
      </button>

      <script>
        const lBtn = document.querySelector(
          ".references-carrousel-left-btn",
        ) as HTMLButtonElement;
        const rBtn = document.querySelector(
          ".references-carrousel-right-btn",
        ) as HTMLButtonElement;
        const carrousel = document.querySelector(".references-carrousel");

        lBtn.addEventListener("click", () => {
          carrousel.scrollBy(-1, 0);
        });
        rBtn.addEventListener("click", () => {
          carrousel.scrollBy(1, 0);
        });

        carrousel.addEventListener("scroll", () => {
          if (carrousel.scrollLeft === 0) {
            lBtn.classList.add("hidden");
          } else {
            lBtn.classList.remove("hidden");
          }

          if (
            carrousel.scrollLeft ===
            carrousel.scrollWidth - carrousel.clientWidth
          ) {
            rBtn.classList.add("hidden");
          } else {
            rBtn.classList.remove("hidden");
          }
        });
      </script>
    </div>
  </div>
</section>
